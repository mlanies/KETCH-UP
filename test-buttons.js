// –¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫ "–°–ª–µ–¥—É—é—â–∏–π" –∏ "–ó–∞–≤–µ—Ä—à–∏—Ç—å"

import { handleLearningAnswer, handleLearningCallback } from './src/handlers/learning.js';

// –ú–æ–∫ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const mockEnv = {
  CLOUDFLARE_ACCOUNT_ID: 'mock_account_id_for_testing',
  CLOUDFLARE_AI_TOKEN: 'mock_ai_token_for_testing',
  GOOGLE_SHEETS_API_KEY: 'mock_api_key_for_testing',
  GOOGLE_SHEETS_SPREADSHEET_ID: 'mock_spreadsheet_id_for_testing',
  DB: null // –ú–æ–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–æ–≤
};

// –ú–æ–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
const mockSendMessage = async (chatId, message) => {
  console.log(`[MOCK] –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç ${chatId}:`);
  console.log(message);
  console.log('---');
};

const mockSendMessageWithKeyboard = async (chatId, message, keyboard) => {
  console.log(`[MOCK] –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –≤ —á–∞—Ç ${chatId}:`);
  console.log(message);
  console.log('–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞:', JSON.stringify(keyboard, null, 2));
  console.log('---');
};

// –ü–æ–¥–º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
global.sendMessage = mockSendMessage;
global.sendMessageWithKeyboard = mockSendMessageWithKeyboard;

// –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
async function testNewButtons() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫ "–°–ª–µ–¥—É—é—â–∏–π" –∏ "–ó–∞–≤–µ—Ä—à–∏—Ç—å"...\n');
  
  const testChatId = 123456789;
  
  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
    console.log('‚úÖ –¢–µ—Å—Ç 1: –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç');
    await handleLearningAnswer(testChatId, 'A', mockEnv);
    
    // –¢–µ—Å—Ç 2: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
    console.log('\n‚ùå –¢–µ—Å—Ç 2: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç');
    await handleLearningAnswer(testChatId, 'B', mockEnv);
    
    // –¢–µ—Å—Ç 3: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å"
    console.log('\n‚è≠Ô∏è –¢–µ—Å—Ç 3: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å"');
    await handleLearningCallback('learning_next_question', testChatId, 1, mockEnv);
    
    // –¢–µ—Å—Ç 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ—Å—Ç"
    console.log('\nüèÅ –¢–µ—Å—Ç 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ—Å—Ç"');
    await handleLearningCallback('learning_finish', testChatId, 1, mockEnv);
    
    console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∫–Ω–æ–ø–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö –∫–Ω–æ–ø–æ–∫:', error);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
if (import.meta.url === `file://${process.argv[1]}`) {
  testNewButtons();
}

export { testNewButtons }; 