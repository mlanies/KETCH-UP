// src/admin-bot.js

const ADMIN_IDS = [123456789]; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ chat_id –∞–¥–º–∏–Ω–æ–≤

async function sendMessage(chatId, text, env) {
  const token = env.ADMIN_BOT_TOKEN;
  const url = `https://api.telegram.org/bot${token}/sendMessage`;
  try {
    const response = await fetch(url, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ chat_id: chatId, text, parse_mode: 'Markdown' })
    });
    const responseText = await response.text();
    console.log(`[ADMIN BOT] Telegram API response status: ${response.status}`);
    console.log(`[ADMIN BOT] Telegram API response body: ${responseText}`);
    console.log(`[ADMIN BOT] Sent message to ${chatId}: ${text}`);
  } catch (err) {
    console.error(`[ADMIN BOT] Error sending message to ${chatId}:`, err);
  }
}

async function handleAdminMessage(message, env) {
  const chatId = message.chat.id;
  const text = message.text || '';
  // TODO: –í–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É ADMIN_IDS –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  // if (!ADMIN_IDS.includes(chatId)) {
  //   await sendMessage(chatId, '‚õîÔ∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞', env);
  //   return;
  // }
  if (text === '/start') {
    await sendMessage(chatId, 'üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –∞–¥–º–∏–Ω-–±–æ—Ç. –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: /feedback, /analytics', env);
  } else if (text === '/feedback') {
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∑—ã–≤–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    await sendMessage(chatId, 'üìù –û—Ç–∑—ã–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∑–∞–≥–ª—É—à–∫–∞)', env);
  } else if (text === '/analytics') {
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É
    await sendMessage(chatId, 'üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ (–∑–∞–≥–ª—É—à–∫–∞)', env);
  } else {
    await sendMessage(chatId, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –î–æ—Å—Ç—É–ø–Ω—ã–µ: /feedback, /analytics', env);
  }
}

export async function handleAdminWebhook(request, env) {
  try {
    const update = await request.json();
    console.log('[ADMIN BOT] Incoming update:', JSON.stringify(update));
    if (update.message) {
      console.log('[ADMIN BOT] chatId:', update.message.chat.id, 'text:', update.message.text);
      await handleAdminMessage(update.message, env);
    } else {
      console.log('[ADMIN BOT] No message in update');
    }
    return new Response('OK');
  } catch (err) {
    console.error('[ADMIN BOT] Error in handleAdminWebhook:', err);
    return new Response('ERROR', { status: 500 });
  }
}

export default { fetch: handleAdminWebhook }; 