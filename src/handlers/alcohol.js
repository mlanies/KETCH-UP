// –õ–æ–≥–∏–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ "–ê–ª–∫–æ–≥–æ–ª—å" (–∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏)

import { sendMessage, sendMessageWithKeyboard, editMessage } from './telegramApi.js';
import { getWineData } from './data.js';
import { getCategoryName } from '../utils/categories.js';

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–¥–µ–ª–∞ "–ê–ª–∫–æ–≥–æ–ª—å"
export async function handleAlcoholSection(chatId, messageId, env) {
  const alcoholText = `üç∑ *–ê–ª–∫–æ–≥–æ–ª—å*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã—Ö –Ω–∞–ø–∏—Ç–∫–æ–≤:`;

  const keyboard = {
    inline_keyboard: [
      [
        { text: 'üç∑ –í–∏–Ω–∞', callback_data: 'category_wines' },
        { text: 'ü•É –ì—Ä–∞–ø–ø–∞, –ü–æ—Ä—Ç–æ, –ö–æ–Ω—å—è–∫, –í–µ—Ä–º—É—Ç', callback_data: 'category_spirits' }
      ],
      [
        { text: 'ü•É –í–∏—Å–∫–∏', callback_data: 'category_whisky' },
        { text: 'üçπ –†–æ–º, –¢–µ–∫–∏–ª–∞', callback_data: 'category_rum_tequila' }
      ],
      [
        { text: 'üç∏ –î–∂–∏–Ω, –í–æ–¥–∫–∞, –õ–∏–∫–µ—Ä—ã', callback_data: 'category_gin_vodka' },
        { text: 'üç∫ –ü–∏–≤–æ', callback_data: 'category_beer' }
      ],
      [
        { text: 'üîô –ù–∞–∑–∞–¥', callback_data: `section_alcohol` },
        { text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'main_menu' }
      ]
    ]
  };

  try {
    await editMessage(chatId, messageId, alcoholText, keyboard, env);
  } catch (e) {
    await sendMessageWithKeyboard(chatId, alcoholText, keyboard, env);
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞–ª–∫–æ–≥–æ–ª—è
export async function handleCategorySelection(data, chatId, messageId, env) {
  const categoryType = data.replace('category_', '');
  console.log('Category selection:', categoryType);
  
  const wines = await getWineData(env);
  console.log('Wines loaded:', wines ? wines.length : 0);
  
  if (!wines || wines.length === 0) {
    await sendMessage(chatId, '–î–∞–Ω–Ω—ã–µ –æ –Ω–∞–ø–∏—Ç–∫–∞—Ö –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', env);
    return;
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ —Ç–∏–ø—É
  const categoryName = getCategoryName(categoryType);
  if (!categoryName) {
    await sendMessage(chatId, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è.', env);
    return;
  }

  // –§–∏–ª—å—Ç—Ä—É–µ–º –Ω–∞–ø–∏—Ç–∫–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const categoryWines = wines.filter(wine => wine.category === categoryName);
  console.log(`Found ${categoryWines.length} drinks in category: ${categoryName}`);

  if (categoryWines.length === 0) {
    await sendMessage(chatId, `–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${categoryName}" –ø–æ–∫–∞ –Ω–µ—Ç –Ω–∞–ø–∏—Ç–∫–æ–≤.`, env);
    return;
  }

  // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const keyboard = {
    inline_keyboard: [
      [
        { text: 'üçØ –§–∏–ª—å—Ç—Ä –ø–æ —Å–∞—Ö–∞—Ä—É', callback_data: `filter_sugar_${categoryType}` },
        { text: 'ü•É –§–∏–ª—å—Ç—Ä –ø–æ –∫—Ä–µ–ø–æ—Å—Ç–∏', callback_data: `filter_alcohol_${categoryType}` }
      ],
      [
        { text: 'üåç –§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç—Ä–∞–Ω–µ', callback_data: `filter_country_${categoryType}` },
        { text: 'üìã –í—Å–µ –Ω–∞–ø–∏—Ç–∫–∏', callback_data: `show_category_${categoryType}` }
      ],
      [
        { text: 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ', callback_data: 'refresh_data' },
        { text: 'üîô –ù–∞–∑–∞–¥', callback_data: `section_alcohol` }
      ]
    ]
  };

  try {
    await editMessage(chatId, messageId, `üç∑ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${categoryName}\n\n–ù–∞–π–¥–µ–Ω–æ ${categoryWines.length} –Ω–∞–ø–∏—Ç–∫–æ–≤.\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:`, keyboard, env);
  } catch (e) {
    await sendMessageWithKeyboard(chatId, `üç∑ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${categoryName}\n\n–ù–∞–π–¥–µ–Ω–æ ${categoryWines.length} –Ω–∞–ø–∏—Ç–∫–æ–≤.\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:`, keyboard, env);
  }
}

// –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –Ω–∞–ø–∏—Ç–∫–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
export async function handleShowCategory(data, chatId, messageId, env) {
  const categoryType = data.replace('show_category_', '');
  console.log('Show category:', categoryType);
  
  const wines = await getWineData(env);
  console.log('Wines loaded:', wines ? wines.length : 0);
  
  if (!wines || wines.length === 0) {
    await sendMessage(chatId, '–î–∞–Ω–Ω—ã–µ –æ –Ω–∞–ø–∏—Ç–∫–∞—Ö –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', env);
    return;
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ —Ç–∏–ø—É
  const categoryName = getCategoryName(categoryType);
  if (!categoryName) {
    await sendMessage(chatId, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è.', env);
    return;
  }

  // –§–∏–ª—å—Ç—Ä—É–µ–º –Ω–∞–ø–∏—Ç–∫–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  const categoryWines = wines.filter(wine => wine.category === categoryName);
  console.log(`Found ${categoryWines.length} drinks in category: ${categoryName}`);

  if (categoryWines.length === 0) {
    await sendMessage(chatId, `–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${categoryName}" –ø–æ–∫–∞ –Ω–µ—Ç –Ω–∞–ø–∏—Ç–∫–æ–≤.`, env);
    return;
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 –Ω–∞–ø–∏—Ç–∫–æ–≤
  const winesToShow = categoryWines.slice(0, 10);
  
  const keyboard = {
    inline_keyboard: winesToShow.map(wine => [
      { text: wine.name, callback_data: wine.id }
    ]).concat([
      [{ text: 'üîô –ù–∞–∑–∞–¥', callback_data: `category_${categoryType}` }],
      [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'main_menu' }]
    ])
  };

  const message = `üç∑ –í—Å–µ –Ω–∞–ø–∏—Ç–∫–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "${categoryName}" (${categoryWines.length} —à—Ç.):\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø–∏—Ç–æ–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π:`;

  try {
    await editMessage(chatId, messageId, message, keyboard, env);
  } catch (e) {
    await sendMessageWithKeyboard(chatId, message, keyboard, env);
  }
} 